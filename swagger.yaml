openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Issue resolver'
  description: 'An API for posting issues'
  contact:
    name: 'Nemanja Curcic'
    email: nemanja.curcic.dev@gmail.com
    url: https://github.com/nemanja-curcic-dev
servers:
  - description: Dev server for Issue resolver
    url: http://localhost:3000/api/v1/
paths:
  /issues/{id}:
    get:
      description: Get the issue
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the issue
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: Issue retrieved successfully
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Issue'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Not found
    delete:
      description: Delete the issue
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the issue
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: Issue deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    detail: Issue deleted successfully
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Not found
    put:
      description: Update the issue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title
                description:
                  type: string
                  example: description
                status:
                  type: string
                  example: in progress
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the issue
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: Issue updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Issue updated successfully
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Not found

  /issues:
    get:
      description: Get list of issues
      responses:
        200:
          description: Successfull listing of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Issue'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/Error'
                
    post:
      description: Create an issue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: title
                description:
                  type: string
                  example: description                
      responses:
        201:
          description: Successful creation of an issue
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Issue'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/Error'
components:
  schemas:
    Issue:
      description: Model containing issue data
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: title
        description:
          type: string
          example: description
        status:
          type: string
          example: in progress
    Error:
      description: Error model
      properties:
        value:
          type: string
          example: Value name
        msg:
          type: string
          example: Not valid value
        param:
          type: string
          example: Parameter name
        location:
          type: string
          example: body